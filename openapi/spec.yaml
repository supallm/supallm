openapi: 3.0.0

info:
  title: SupALLM API
  version: "0.0.1"

# Apply security globally
security:
  - BearerAuth: []

paths:
  /projects:
    get:
      summary: List all projects
      operationId: listProjects
      tags:
        - Project
      responses:
        "200":
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
    post:
      summary: "Create a project"
      operationId: createProject
      tags:
        - Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectRequest"
      responses:
        "201":
          description: "Project created"

  /projects/{projectId}:
    get:
      summary: "Get a project by ID"
      operationId: getProject
      tags:
        - Project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: "Project details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "404":
          description: "Project not found"
    put:
      summary: "Update a project"
      operationId: updateProject
      tags:
        - Project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectRequest"
      responses:
        "200":
          description: "Project updated"
        "404":
          description: "Project not found"
    delete:
      summary: "Delete a project"
      operationId: deleteProject
      tags:
        - Project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "204":
          description: "Project deleted"
        "404":
          description: "Project not found"

  /projects/{projectId}/auth:
    put:
      summary: "Update authentication configuration for a project"
      operationId: updateAuth
      tags:
        - Project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAuthRequest"
      responses:
        "200":
          description: "Authentication configuration updated"
        "404":
          description: "Project not found"

  /projects/{projectId}/credentials:
    get:
      summary: List all credentials for a project
      operationId: listCredentials
      tags:
        - Credential
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: List of credentials
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Credential"
        "404":
          description: Project not found
    post:
      summary: "Create a credential for a project"
      operationId: createCredential
      tags:
        - Credential
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCredentialRequest"
      responses:
        "201":
          description: "Credential created"
        "400":
          description: Bad request
        "404":
          description: Project not found

  /projects/{projectId}/credentials/{credentialId}:
    get:
      summary: "Get a credential by ID"
      operationId: getCredential
      tags:
        - Credential
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
        - name: credentialId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: "Credentials"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
        "404":
          description: Credential or project not found
    patch:
      summary: "Update a credential"
      operationId: updateCredential
      tags:
        - Credential
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
        - name: credentialId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCredentialRequest"
      responses:
        "200":
          description: "Credential updated"
        "400":
          description: Bad request
        "404":
          description: Credential or project not found
    delete:
      summary: "Delete a credential"
      operationId: deleteCredential
      tags:
        - Credential
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
        - name: credentialId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "204":
          description: "Credential deleted"
        "404":
          description: Credential or project not found

  /projects/{projectId}/workflows:
    get:
      summary: List all workflows for a project
      operationId: listWorkflows
      tags:
        - Workflow
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: List of workflows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Workflow"
        "404":
          description: Project not found
    post:
      summary: "Create a workflow for a project"
      operationId: createWorkflow
      tags:
        - Workflow
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkflowRequest"
      responses:
        "201":
          description: "Workflow created"
        "400":
          description: Bad request
        "404":
          description: Project not found

  /projects/{projectId}/workflows/{workflowId}:
    get:
      summary: "Get a workflow by ID"
      operationId: getWorkflow
      tags:
        - Workflow
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Workflow details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
        "404":
          description: Workflow or project not found
    put:
      summary: "Update a workflow"
      operationId: updateWorkflow
      tags:
        - Workflow
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkflowRequest"
      responses:
        "200":
          description: "Workflow updated"
        "400":
          description: Bad request
        "404":
          description: Workflow or project not found
    delete:
      summary: "Delete a workflow"
      operationId: deleteWorkflow
      tags:
        - Workflow
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Workflow deleted"
        "404":
          description: Workflow or project not found

  /projects/{projectId}/workflows/{workflowId}/trigger:
    post:
      summary: "Trigger a workflow"
      operationId: triggerWorkflow
      tags:
        - Workflow
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerWorkflowRequest"
      responses:
        "200":
          description: "Workflow triggered"
        "400":
          description: Bad request
        "404":
          description: Project or workflow not found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UUID:
      type: string
      x-go-type: uuid.UUID
      x-go-type-import:
        name: uuid
        path: github.com/google/uuid
    Project:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        name:
          type: string
        authProvider:
          $ref: "#/components/schemas/AuthProvider"
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/Credential"
        workflows:
          type: array
          items:
            $ref: "#/components/schemas/Workflow"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - userId
        - authProvider
        - credentials
        - workflows
        - createdAt
        - updatedAt

    CreateProjectRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    UpdateProjectRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    ProviderType:
      type: string
      enum:
        - openai
        - anthropic

    Credential:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        name:
          type: string
        provider:
          $ref: "#/components/schemas/ProviderType"
        apiKey:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - provider
        - apiKey
        - createdAt
        - updatedAt

    CreateCredentialRequest:
      type: object
      properties:
        name:
          type: string
        provider:
          $ref: "#/components/schemas/ProviderType"
        apiKey:
          type: string
      required:
        - name
        - provider
        - apiKey

    UpdateCredentialRequest:
      type: object
      properties:
        name:
          type: string
        apiKey:
          type: string
      required:
        - name

    Workflow:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        builderFlow:
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - builderFlow
        - createdAt
        - updatedAt

    CreateWorkflowRequest:
      type: object
      properties:
        name:
          type: string
        builderFlow:
          type: object
      required:
        - name
        - builderFlow

    UpdateWorkflowRequest:
      type: object
      properties:
        name:
          type: string
        builderFlow:
          type: object
      required:
        - name
        - builderFlow

    AuthProvider:
      type: object
      properties:
        provider:
          type: string
          enum:
            - supabase
            - clerk
            - firebase
        config:
          type: object
      required:
        - provider
        - config

    UpdateAuthRequest:
      type: object
      properties:
        provider:
          type: string
          enum:
            - supabase
            - clerk
            - firebase
        config:
          type: object
      required:
        - provider
        - config

    TriggerWorkflowRequest:
      type: object
      properties:
        inputs:
          type: object
      required:
        - inputs
